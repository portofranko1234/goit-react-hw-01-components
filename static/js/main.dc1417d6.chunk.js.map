{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FriedList/FriendList.module.css","components/Profile/styles.js","components/Profile/Profile.jsx","components/Statistics/StatisticsItem.jsx","components/Statistics/Statistics.jsx","components/FriedList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","createUseStyles","profile","display","width","margin","borderRadius","description","backgroundColor","textAlign","avatar","padding","stats","justifyContent","listStyle","name","fontSize","fontWeight","color","paddingTop","paddingBottom","tag","location","label","quantity","Profile","classes","useStyles","className","src","alt","followers","views","likes","StatisticsItem","percentage","styles","Statistics","title","statistics","statList","map","stat","item","id","offlineColor","onlineColor","FriendList","friends","s","friendList","friend","status","style","isOnline","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","transactions","statisticalData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc1417d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1XxRy\",\"title\":\"Statistics_title__12eJP\",\"statList\":\"Statistics_statList__yN8E8\",\"item\":\"Statistics_item__2wH5P\",\"label\":\"Statistics_label__2zxej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__qeAUi\",\"item\":\"FriendList_item__3eMBC\",\"status\":\"FriendList_status__3bNou\",\"name\":\"FriendList_name__MXmpB\"};","import { createUseStyles } from \"react-jss\";\r\n\r\nexport default createUseStyles({\r\n  profile: {\r\n    display: \"block\",\r\n    width: 270,\r\n    margin: \"10px auto 30px auto\",\r\n    borderRadius: 5,\r\n  },\r\n\r\n  description: {\r\n    backgroundColor: \"white\",\r\n    textAlign: \"center\",\r\n    borderRadius: \"5px 5px 0 0\",\r\n  },\r\n\r\n  avatar: {\r\n    width: \"50%\",\r\n    padding: 10,\r\n  },\r\n\r\n  stats: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: \"15px 5px 15px 5px\",\r\n    backgroundColor: \"silver\",\r\n    borderRadius: \"0 0 5px 5px\",\r\n  },\r\n\r\n  name: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n    margin: 0,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n  },\r\n\r\n  tag: {\r\n    color: \"black\",\r\n    margin: 0,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    fontSize: 14,\r\n  },\r\n\r\n  location: {\r\n    color: \"black\",\r\n    margin: 0,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    fontSize: 14,\r\n  },\r\n\r\n  label: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"center\",\r\n    width: 90,\r\n    fontSize: 12,\r\n  },\r\n\r\n  quantity: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"center\",\r\n    width: 90,\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.profile}>\r\n      <div className={classes.description}>\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className={classes.avatar}\r\n        />\r\n        <p className={classes.name}>{name}</p>\r\n        <p className={classes.tag}>@{tag}</p>\r\n        <p className={classes.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={classes.stats}>\r\n        <li>\r\n          <span className={classes.label}>Followers</span>\r\n          <span className={classes.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={classes.label}>Views</span>\r\n          <span className={classes.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={classes.label}>Likes</span>\r\n          <span className={classes.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst StatisticsItem = ({ label, percentage }) => (\r\n  <>\r\n    <span className={styles.label}>{label}</span>\r\n    <span className={styles.percentage}>{percentage}</span>\r\n  </>\r\n);\r\n\r\nStatisticsItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticsItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport StatisticsItem from \"./StatisticsItem\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>Upload stats</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map((stat) => (\r\n        <li key={stat.id} className={styles.item}>\r\n          <StatisticsItem label={stat.label} percentage={stat.percentage} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FriendList.module.css\";\r\n\r\nconst offlineColor = { backgroundColor: \"rgb(245, 4, 4)\" };\r\nconst onlineColor = { backgroundColor: \"rgb(9, 241, 40)\" };\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={s.friendList}>\r\n    {friends.map((friend) => (\r\n      <li key={friend.id} className={s.item}>\r\n        <span\r\n          className={s.status}\r\n          style={friend.isOnline ? onlineColor : offlineColor}\r\n        >\r\n          {friend.isOnline}\r\n        </span>\r\n        <img className={s.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\r\n        <p className={s.name}>{friend.name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map((item) => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport user from \"./data/user.json\";\r\nimport statisticalData from \"./data/statistical-data.json\";\r\nimport friends from \"./data/friends.json\";\r\nimport transactions from \"./data/transactions.json\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport FriendList from \"./components/FriedList/FriendList\";\r\n\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <FriendList friends={friends} />\r\n\r\n      <TransactionHistory items={transactions} />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <Statistics stats={statisticalData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}